{"version":3,"sources":["Staking.module.css","WithdrawPopup.js","StakePopup.js","Stake.js","Main.js","Navbar.js","CreateStaking.js","App.js","index.js"],"names":["module","exports","WithdrawPopup","props","handleClose","event","setState","show","state","withdrawAmount","Button","className","onClick","preventDefault","Modal","this","Header","style","display","justifyContent","alignItems","Body","id","marginTop","type","min","onChange","input","value","toString","ref","placeholder","Footer","variant","console","log","stakingcontractdata","withdraw","window","web3","utils","toWei","Component","StakePopup","stakeAmount","stake","Stake","button","isStakeTokenApproved","claim","reinvest","approve","allStakedAmount","stakeTokenBalance","myStake","pendingReward","weeklyEstimate","finishTime","Main","staking","StakeBgColor","WithdrawBgColor","ethBalance","LPTokenBalance","StakingContract","allRewardDebt","allPaidReward","accTokensPerShare","startTime","lastRewardTime","NavbarLocal","Navbar","bg","Nav","Item","Brand","to","Link","loading","arialLabel","height","account","width","src","Identicon","alt","CreateStaking","emptyStaking","stakeAddress","poolAddress","startBlock","finishBlock","poolTokenSupply","hasWhitelisting","inputChangeHandler","createStaking","target","name","handleCreate","createStakingPoolHandler","classes","Staking","autoComplete","required","App","staketoken","methods","StakingContractAddress","approveAmount","send","from","on","hash","confirmationNumber","alert","AmountStaked","stakeTokens","loadBlockchainData","AmountToBeWithdrawn","withdrawStake","receipt","error","reinvestTokens","stakingObject","stakingCreationContractData","convertedToWei","StakingCreationContractAddress","StakingCreationContract","createStakingPool","rewardtoken","RewardTokenBalance","a","loadWeb3","StakeToken","networks","networkID","StakeTokenAddress","address","eth","Contract","abi","Promise","all","balanceOf","call","allowance","stakingContract","fromWei","RewardToken","RewardTokenAddress","getUserInfo","rewardPerSec","moment","unix","format","toBN","muln","stakingCreationContract","ethereum","Web3","enable","getAccounts","accounts","getBalance","net","getId","currentProvider","background","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5af27b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Staking\":\"Staking_Staking__3czEW\",\"icon\":\"Staking_icon__39zsA\",\"inputDiv\":\"Staking_inputDiv__2q_QH\",\"input\":\"Staking_input__31aGZ\",\"totals\":\"Staking_totals__1UJ_M\",\"goMax\":\"Staking_goMax__107nw\",\"stakeButton\":\"Staking_stakeButton__NuLYl\",\"unstakeButton\":\"Staking_unstakeButton__3xbyO\",\"stakeIcon\":\"Staking_stakeIcon__22k59\"};","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.js';\nimport {Button, Modal} from \"react-bootstrap\";\n\n\n\nclass WithdrawPopup extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      withdrawAmount: '0',\n      show: false,\n    }\n  }\n\n  handleClose = (event) => {\n    this.setState({ show: false })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Button className=\"btn btn-lg center-block claimAndWithdrawBtn\" onClick={(event) => {\n          event.preventDefault()\n          this.setState({ show: true })\n        }}>\n          Withdraw\n        </Button>\n\n        <Modal show={this.state.show}>\n          <Modal.Header>\n            <h4 style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}>Withdrawal</h4>\n            <br/>\n            <span >Enter amount to complete your withdrawal</span>\n          </Modal.Header>\n          <Modal.Body>\n\n            <div>\n              <span id=\"emailHelp\" className=\"form-text text-muted\">\n                Amount\n              </span>\n              <div className=\"form-group\" style={{ marginTop: 0 }}>\n                <input type=\"number\" min='0' className=\"form-control\" aria-describedby=\"emailHelp\" onChange={(event) => {\n                  const withdrawAmount = this.input.value.toString()\n                  this.setState({ withdrawAmount: withdrawAmount })\n                }}\n                       ref={(input) => { this.input = input }} placeholder={this.state.withdrawAmount.toString()}\n                />\n\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" className=\"claimAndWithdrawBtn\" onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" className=\"claimAndWithdrawBtn\" onClick={(event) => {\n              event.preventDefault()\n              console.log(this.props.stakingcontractdata);\n              if (this.props.stakingcontractdata === true) {\n                this.props.withdraw(window.web3.utils.toWei(this.state.withdrawAmount, 'Ether'));\n                this.handleClose(event);\n              }\n            }}>\n              Confirm\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default WithdrawPopup;\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.js';\nimport {Button, Modal} from \"react-bootstrap\";\n\nclass StakePopup extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      stakeAmount: '0',\n      show: false,\n    }\n  }\n\n  handleClose = (event) => {\n    this.setState({ show: false })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Button className=\"btn btn-warning btn-sm\" onClick={(event) => {\n          event.preventDefault()\n          this.setState({ show: true })\n        }}>\n          Stake\n        </Button>\n\n        <Modal show={this.state.show}>\n          <Modal.Header>\n            <h4 style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}>Stake</h4>\n            <br/>\n            <span >Enter amount to complete your staking</span>\n          </Modal.Header>\n          <Modal.Body>\n\n            <div>\n              <span id=\"emailHelp\" className=\"form-text text-muted\">\n                Amount\n              </span>\n              <div className=\"form-group\" style={{ marginTop: 0 }}>\n                <input type=\"number\" min='0' className=\"form-control\" aria-describedby=\"emailHelp\" onChange={(event) => {\n                  const stakeAmount = this.input.value.toString()\n                  this.setState({ stakeAmount: stakeAmount })\n                }}\n                       ref={(input) => { this.input = input }} placeholder={this.state.stakeAmount.toString()}\n                />\n\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" className=\"claimAndWithdrawBtn\" onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" className=\"claimAndWithdrawBtn\" onClick={(event) => {\n              event.preventDefault()\n              if (this.props.stakingcontractdata === true) {\n                this.props.stake(window.web3.utils.toWei(this.state.stakeAmount, 'Ether'));\n                this.handleClose(event);\n              }\n            }}>\n              Confirm\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default StakePopup;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.js';\nimport {Button } from \"react-bootstrap\";\nimport WithdrawPopup from \"./WithdrawPopup\";\nimport StakePopup from \"./StakePopup\";\n\n\n\nclass Stake extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      stakeAmount: '0'\n    }\n  }\n\n\n  render() {\n\n    let button;\n    if (!this.props.isStakeTokenApproved) {\n      button =\n        <div>\n          <Button type=\"submit\" className=\"stakenow-btn btn-lg\" onClick={(event) => {\n            event.preventDefault()\n            if (this.props.stakingcontractdata === true) {\n              this.props.approve()\n            }\n          }}> Approve </Button>\n        </div>\n    } else {\n      button = <div>\n        <Button type=\"submit\" className=\"btn btn-lg center-block claimAndWithdrawBtn\" onClick={(event) => {\n          event.preventDefault()\n\n          if (this.props.stakingcontractdata === true) {\n            this.props.claim()\n          }\n        }}> Claim </Button>\n\n        <Button type=\"submit\" className=\"btn btn-lg center-block claimAndWithdrawBtn\" onClick={(event) => {\n          event.preventDefault()\n\n          if (this.props.stakingcontractdata === true) {\n            this.props.reinvest()\n          }\n        }}> Reinvest </Button>\n\n        <WithdrawPopup\n          stakingcontractdata = {this.props.stakingcontractdata}\n          withdraw={this.props.withdraw}\n        />\n      </div>\n    }\n\n    return (\n\n      <div className=\"table-responsive\">\n        <div className='tokenNameDiv'>\n\n          <table className='table table-borderless table-sm'>\n            <tbody>\n              <tr>\n                <td> <h3> Token Name</h3></td>\n                <td className='token-heading-btn'>\n                  <StakePopup\n                    stakingcontractdata = {this.props.stakingcontractdata}\n                    stake={this.props.stake}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <table className='table table-borderless table-sm'>\n          <tbody>\n            <tr>\n              <td className='token-declaration-text'> Total Staked </td>\n              <td className='infoTableValue'> {this.props.allStakedAmount} STK </td>\n            </tr>\n            <tr>\n              <td className='token-declaration-text'> APR </td>\n              {/*TODO: change to correct APR*/}\n              <td className='infoTableValue'> 10% </td>\n            </tr>\n            <tr>\n              <td className='token-declaration-text'> My Wallet </td>\n              <td className='infoTableValue'> {this.props.stakeTokenBalance} STK </td>\n            </tr>\n            <tr>\n              <td className='token-declaration-text'> My Stake </td>\n              <td className='infoTableValue'> {this.props.myStake} STK </td>\n            </tr>\n            <tr>\n              <td className='token-declaration-text'> My Rewards </td>\n              <td className='infoTableValue'> {this.props.pendingReward} STK </td>\n            </tr>\n            <tr>\n              <td className='token-declaration-text'> Weekly Estimate </td>\n              {/*TODO: change to correct Estimate*/}\n              <td className='infoTableValue'> {this.props.weeklyEstimate} STK </td>\n            </tr>\n            <tr>\n              <td className='token-declaration-text'> Pool End Date (UTC) </td>\n              <td className='infoTableValue'> { this.props.finishTime } </td>\n            </tr>\n          </tbody>\n        </table>\n\n        { button }\n\n      </div>\n\n    );\n  }\n}\n\nexport default Stake;\n","import './App.css';\nimport Stake from './Stake.js';\nimport React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Main extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstaking: 'true',\n\t\t\tStakeBgColor: '',\n\t\t\tWithdrawBgColor: ''\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=' card border border-dark rounded-lg shadow-lg p-3 mb-5 bg-white rounded card-props'>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<Stake\n\t\t\t\t\t\tethBalance={this.props.ethBalance}\n\t\t\t\t\t\tstakeTokenBalance={this.props.stakeTokenBalance}\n\t\t\t\t\t\tstake={this.props.stake}\n\t\t\t\t\t\twithdraw={this.props.withdraw}\n\t\t\t\t\t\tstaking={this.props.staking}\n\t\t\t\t\t\tapprove={this.props.approve}\n\t\t\t\t\t\tclaim={this.props.claim}\n\t\t\t\t\t\treinvest={this.props.reinvest}\n\t\t\t\t\t\tLPTokenBalance={this.props.LPTokenBalance}\n\t\t\t\t\t\tStakingContract={this.props.StakingContract}\n\t\t\t\t\t\tstakingcontractdata={this.props.stakingcontractdata}\n\t\t\t\t\t\tisStakeTokenApproved={this.props.isStakeTokenApproved}\n\n\t\t\t\t\t\tmyStake={this.props.myStake}\n\t\t\t\t\t\tallRewardDebt={this.props.allRewardDebt}\n\t\t\t\t\t\tallPaidReward={this.props.allPaidReward}\n\t\t\t\t\t\taccTokensPerShare={this.props.accTokensPerShare}\n\t\t\t\t\t\tpendingReward={this.props.pendingReward}\n\t\t\t\t\t\tweeklyEstimate={this.props.weeklyEstimate}\n\t\t\t\t\t\tallStakedAmount={this.props.allStakedAmount}\n\t\t\t\t\t\tstartTime={this.props.startTime}\n\t\t\t\t\t\tfinishTime={this.props.finishTime}\n\t\t\t\t\t\tlastRewardTime={this.props.lastRewardTime}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n","import React, {Component} from 'react'\nimport Identicon from 'identicon.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar} from \"react-bootstrap\";\nimport { ThreeDots} from \"react-loader-spinner\";\n\nclass NavbarLocal extends Component {\n\n\trender() {\n\t\treturn (\n\n\t\t\t<Navbar bg=\"light\" variant=\"light\">\n\n\t\t\t\t<Nav className=\"container-fluid\">\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t{/*<Navbar.Brand as={Link} to=\"/\">Staking</Navbar.Brand>*/}\n\t\t\t\t\t\t<Navbar.Brand to=\"/\">Staking</Navbar.Brand>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link to=\"/\">Create Staking</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link to=\"/staking-list\">Staking List</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item className=\"ml-auto\">\n\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t{this.props.loading ? <ThreeDots arialLabel=\"loading-indicator\" height={30}/> : null}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item className=\"ml-auto\">\n\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t<small className='text-secondary'>\n\t\t\t\t\t\t\t\t<small id=\"account\"> {this.props.account} </small>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t{this.props.account\n\t\t\t\t\t\t\t\t? <img\n\t\t\t\t\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t\t\t\t\t\twidth='30'\n\t\t\t\t\t\t\t\t\theight='30'\n\t\t\t\t\t\t\t\t\tsrc={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: <span></span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t);\n\t}\n}\n\nexport default NavbarLocal;\n","import './App.css';\nimport React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classes from \"./Staking.module.css\";\nimport {Button} from \"react-bootstrap\";\n\nclass CreateStaking extends Component {\n\n\temptyStaking = {\n\t\tstakeAddress: '',\n\t\tpoolAddress: '',\n\t\tstartBlock: '',\n\t\tfinishBlock: '',\n\t\tpoolTokenSupply: '',\n\t\thasWhitelisting: false,\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcreateStaking: this.emptyStaking\n\t\t}\n\t}\n\n\tinputChangeHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ createStaking: {\n\t\t\t...this.state.createStaking,\n\t\t\t[event.target.name]: event.target.value,\n\t\t\t}\n\t\t})\n\t};\n\n\thandleCreate = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.createStakingPoolHandler(this.state.createStaking);\n\t\tthis.setState({ createStaking: this.emptyStaking});\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=' card border border-dark rounded-lg shadow-lg p-3 mb-5 bg-white rounded create-stk-card-props'>\n\t\t\t\t<div className='card-header text-center'>\n\t\t\t\t\t<h3> Create Staking</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<div className={classes.Staking}>\n\t\t\t\t\t\t\tStaking Token<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"stakeAddress\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.stakeAddress}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tPool Token<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"poolAddress\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.poolAddress}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tStart Time Stamp<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"startBlock\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.startBlock}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tFinish Time Stamp<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"finishBlock\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.finishBlock}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tPool Token Supply<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"poolTokenSupply\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.poolTokenSupply}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t<Button variant=\"secondary\" className=\"claimAndWithdrawBtn\" onClick={this.handleCreate}>\n\t\t\t\t\t\t\tCreate Staking\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateStaking;\n","import './App.css';\nimport Main from './Main.js'\nimport React, {Component} from 'react';\nimport Web3 from 'web3';\nimport stakingContract from './abis/StakingContract.json';\nimport stakingCreationContract from './abis/StakingCreationContract.json';\nimport NavbarLocal from './Navbar.js';\nimport CreateStaking from './CreateStaking.js';\nimport StakeToken from './abis/StakeToken.json';\nimport RewardToken from './abis/RewardToken.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\nimport {Routes, Route} from 'react-router-dom';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tapproveAmount: '115792089237316195423570985008687907853269984665640564039457584007913129639935',\n\t\t\taccount: '',\n\t\t\tethBalance: '0',\n\t\t\tStakingContract: {},\n\t\t\tloading: true,\n\t\t\tstaketoken: {},\n\t\t\tstaking: 'true', // deprecated\n\t\t\trewardtoken: {},\n\t\t\tRewardTokenBalance: '0',\n\t\t\tStakingContractAddress: '',\n\t\t\tStakingCreationContractAddress: '',\n\t\t\tstakingcontractdata: true,\n\t\t\tisStakeTokenApproved: false,\n\t\t\tstakingCreationContractData: false,\n\t\t\tStakingCreationContract: {},\n\n\t\t\tstakeTokenBalance: '0',\n\t\t\tmyStake: '0',\n\t\t\tallRewardDebt: '0',\n\t\t\tallPaidReward: '0',\n\t\t\taccTokensPerShare: '0',\n\t\t\tpendingReward: '0',\n\t\t\tweeklyEstimate: '0',\n\t\t\tallStakedAmount: '0',\n\t\t\tstartTime: '',\n\t\t\tfinishTime: '',\n\t\t\tlastRewardTime: '',\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.loadWeb3()\n\t\tawait this.loadBlockchainData()\n\t}\n\n\tasync loadBlockchainData() {\n\t\tconst web3 = window.web3\n\n\t\t// load stake token and stake token bal of connected address\n\t\tconst StakeTokenData = StakeToken.networks[this.state.networkID]\n\t\tif (StakeTokenData) {\n\t\t\tconst StakeTokenAddress = StakeToken.networks[this.state.networkID].address\n\t\t\tconst staketoken = new web3.eth.Contract(StakeToken.abi, StakeTokenAddress)\n\t\t\tthis.setState({staketoken})\n\n\t\t\tlet [\n\t\t\t\tstakeTokenBalance,\n\t\t\t\tallowance,\n\t\t\t] = await Promise.all([\n\t\t\t\tstaketoken.methods.balanceOf(this.state.account).call(),\n\t\t\t\tstaketoken.methods.allowance(this.state.account, stakingContract.networks[this.state.networkID].address).call(),\n\t\t\t])\n\n\t\t\tthis.setState({\n\t\t\t\tstakeTokenBalance: window.web3.utils.fromWei(stakeTokenBalance.toString(), 'Ether'),\n\t\t\t\tisStakeTokenApproved: allowance === this.state.approveAmount,\n\t\t\t})\n\n\t\t} else {\n\t\t\twindow.alert('token to be staked not on this blockchain network, switch to ropsten')\n\t\t}\n\n\t\t// load stake token and stake token bal of connected address\n\t\tconst RewardTokenData = RewardToken.networks[this.state.networkID]\n\t\tif (RewardTokenData) {\n\t\t\tconst RewardTokenAddress = RewardToken.networks[this.state.networkID].address\n\n\t\t\tconst rewardtoken = new web3.eth.Contract(RewardToken.abi, RewardTokenAddress)\n\t\t\tthis.setState({rewardtoken: rewardtoken})\n\n\t\t\tlet RewardTokenBalance = await rewardtoken.methods.balanceOf(this.state.account).call()\n\n\t\t\tthis.setState({\n\t\t\t\tRewardTokenBalance: RewardTokenBalance.toString()\n\t\t\t})\n\n\t\t} else {\n\t\t}\n\n\n\t\t// load staking contract\n\t\tconst StakingContractData = stakingContract.networks[this.state.networkID]\n\t\tif (StakingContractData) {\n\t\t\tthis.setState({stakingcontractdata: true})\n\t\t\tconst StakingContractAddress = stakingContract.networks[this.state.networkID].address\n\t\t\tthis.setState({StakingContractAddress: StakingContractAddress})\n\n\t\t\tconst StakingContract = new web3.eth.Contract(stakingContract.abi, StakingContractAddress)\n\n\t\t\tlet [\n\t\t\t\tmyStake,\n\t\t\t\tallRewardDebt,\n\t\t\t\tallPaidReward,\n\t\t\t\taccTokensPerShare,\n\t\t\t\tpendingReward,\n\t\t\t\tlastRewardTime,\n\t\t\t\trewardPerSec,\n\t\t\t\tstartTime,\n\t\t\t\tfinishTime,\n\t\t\t\tallStakedAmount,\n\t\t\t] = await Promise.all([\n\t\t\t\tStakingContract.methods.getUserInfo(this.state.account).call(),\n\t\t\t\tStakingContract.methods.allRewardDebt().call(),\n\t\t\t\tStakingContract.methods.allPaidReward().call(),\n\t\t\t\tStakingContract.methods.accTokensPerShare().call(),\n\t\t\t\tStakingContract.methods.pendingReward(this.state.account).call(),\n\t\t\t\tStakingContract.methods.lastRewardTime().call(),\n\t\t\t\tStakingContract.methods.rewardPerSec().call(),\n\t\t\t\tStakingContract.methods.startTime().call(),\n\t\t\t\tStakingContract.methods.finishTime().call(),\n\t\t\t\tStakingContract.methods.allStakedAmount().call(),\n\t\t\t])\n\n\t\t\tmyStake = window.web3.utils.fromWei(myStake[0].toString(), 'Ether');\n\t\t\tallRewardDebt = window.web3.utils.fromWei(allRewardDebt.toString(), 'Ether');\n\t\t\tallPaidReward = window.web3.utils.fromWei(allPaidReward.toString(), 'Ether');\n\t\t\taccTokensPerShare = window.web3.utils.fromWei(accTokensPerShare.toString(), 'Ether');\n\t\t\tpendingReward = window.web3.utils.fromWei(pendingReward.toString(), 'Ether');\n\t\t\t// rewardPerSec = window.web3.utils.fromWei(rewardPerSec.toString(), 'Ether');\n\t\t\tallStakedAmount = allStakedAmount ? window.web3.utils.fromWei(allStakedAmount.toString(), 'Ether') : 0;\n\t\t\tstartTime = moment.unix(startTime).format(\"YYYY-MM-DD HH:mm\");\n\t\t\tfinishTime = moment.unix(finishTime).format(\"YYYY-MM-DD HH:mm\");\n\t\t\tlastRewardTime = moment.unix(lastRewardTime).format(\"YYYY-MM-DD HH:mm\");\n\t\t\tlet weeklyEstimate = window.web3.utils.fromWei(\n\t\t\t\twindow.web3.utils.toBN(rewardPerSec).muln(60 * 60 * 24 * 7),\n\t\t\t\t'Ether',\n\t\t\t)\n\n\t\t\tthis.setState({\n\t\t\t\tStakingContract,\n\t\t\t\tmyStake,\n\t\t\t\tallRewardDebt,\n\t\t\t\tallPaidReward,\n\t\t\t\taccTokensPerShare,\n\t\t\t\tpendingReward,\n\t\t\t\tweeklyEstimate,\n\t\t\t\tallStakedAmount,\n\t\t\t\tstartTime,\n\t\t\t\tfinishTime,\n\t\t\t\tlastRewardTime,\n\t\t\t})\n\n\t\t} else {\n\t\t\tthis.setState({stakingcontractdata: false})\n\t\t\twindow.alert('staking contract not live on this blockchain, please switch to ropsten')\n\t\t}\n\n\t\t// load staking creation contract\n\t\tconst StakingCreationContractData = stakingCreationContract.networks[this.state.networkID]\n\t\tif (StakingCreationContractData) {\n\t\t\tthis.setState({stakingCreationContractData: true})\n\t\t\tconst StakingCreationContractAddress = stakingCreationContract.networks[this.state.networkID].address\n\t\t\tthis.setState({StakingCreationContractAddress: StakingCreationContractAddress})\n\n\t\t\tconst StakingCreationContract = new web3.eth.Contract(stakingCreationContract.abi, StakingCreationContractAddress)\n\t\t\tthis.setState({\n\t\t\t\tStakingCreationContract,\n\t\t\t})\n\n\t\t} else {\n\t\t\tthis.setState({stakingCreationContractData: false})\n\t\t\twindow.alert('staking creation contract not live on this blockchain, please switch to ropsten')\n\t\t}\n\n\t\tthis.setState({loading: false})\n\t}\n\n\tasync loadWeb3() {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable()\n\t\t\tconst web3 = window.web3\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n\t\t\tthis.setState({account: accounts[0]})\n\n\t\t\tconst ethBalance = await web3.eth.getBalance(this.state.account)\n\t\t\tthis.setState({ethBalance: ethBalance})\n\n\t\t\tconst networkID = await web3.eth.net.getId()\n\t\t\tconsole.log(networkID)\n\t\t\tthis.setState({networkID: networkID})\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\tconst web3 = window.web3\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n\t\t\tthis.setState({account: accounts[0]})\n\n\t\t\tconst ethBalance = await web3.eth.getBalance(this.state.account)\n\t\t\tthis.setState({ethBalance: ethBalance})\n\n\t\t\tconst networkID = await web3.eth.net.getId()\n\t\t\tconsole.log(networkID)\n\t\t\tthis.setState({networkID: networkID})\n\t\t} else {\n\t\t\twindow.alert('Non-Ethereum browser detected. Please install metamask chrome extension and refresh page')\n\t\t}\n\t}\n\n\tapprove = () => {\n\t\tif (this.state.stakingcontractdata === true) {\n\t\t\tthis.state.staketoken.methods\n\t\t\t\t// make it +/- max approve so its needed only once\n\t\t\t\t.approve(this.state.StakingContractAddress, this.state.approveAmount)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t})\n\t\t\t\t.on('confirmation', (confirmationNumber) => {\n\t\t\t\t\tthis.setState({isStakeTokenApproved: true})\n\t\t\t\t})\n\t\t} else {\n\t\t\twindow.alert('staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\tstake = (AmountStaked) => {\n\t\tif (this.state.stakingcontractdata === true) {\n\n\t\t\tif (this.state.isStakeTokenApproved) {\n\t\t\t\tthis.state.StakingContract.methods.stakeTokens(AmountStaked).send({from: this.state.account}).on('transactionHash', (hash) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\twindow.alert('staking contract has no enough access to the owners token')\n\t\t\t}\n\n\t\t} else {\n\t\t\twindow.alert('staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\twithdraw = (AmountToBeWithdrawn) => {\n\t\tif (this.state.stakingcontractdata === true) {\n\t\t\tthis.state.StakingContract.methods\n\t\t\t\t.withdrawStake(AmountToBeWithdrawn)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('receipt', (receipt) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('error', function (error) {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t});\n\t\t} else {\n\t\t\twindow.alert('staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\tclaim = () => {\n\t\tthis.setState({loading: true})\n\t\tif (this.state.stakingcontractdata === true) {\n\t\t\tthis.state.StakingContract.methods\n\t\t\t\t.withdrawStake(0)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('receipt', (receipt) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('error', function (error) {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t});\n\t\t} else {\n\t\t\twindow.alert('staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\treinvest = () => {\n\t\tthis.setState({loading: true})\n\t\tif (this.state.stakingcontractdata === true) {\n\t\t\tthis.state.StakingContract.methods\n\t\t\t\t.reinvestTokens()\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('receipt', (receipt) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t\t\t.on('error', function (error) {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t});\n\t\t} else {\n\t\t\twindow.alert('staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\tcreateStakingPoolHandler = (stakingObject) => {\n\t\tconsole.log(stakingObject);\n\n\t\tthis.setState({loading: true})\n\t\tif (this.state.stakingCreationContractData === true) {\n\t\t\tlet convertedToWei = window.web3.utils.toWei(stakingObject.poolTokenSupply, 'Ether');\n\n\t\t\tthis.state.staketoken.methods\n\t\t\t\t.approve(this.state.StakingCreationContractAddress, convertedToWei)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\tthis.state.StakingCreationContract.methods.createStakingPool(\n\t\t\t\t\t\tstakingObject.stakeAddress,\n\t\t\t\t\t\tstakingObject.poolAddress,\n\t\t\t\t\t\tstakingObject.startBlock,\n\t\t\t\t\t\tstakingObject.finishBlock,\n\t\t\t\t\t\tconvertedToWei,\n\t\t\t\t\t\tstakingObject.hasWhitelisting,\n\t\t\t\t\t)\n\t\t\t\t\t\t.send({from: this.state.account})\n\t\t\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.on('receipt', (receipt) => {\n\t\t\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on('error', function (error) {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t});\n\n\t\t} else {\n\t\t\twindow.alert('staking contract not live on this blockchain')\n\t\t}\n\t};\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='secondDiv'>\n\t\t\t\t<div className=\"App secondDiv\">\n\t\t\t\t\t<NavbarLocal account={this.state.account} loading={this.state.loading}/>\n\t\t\t\t\t<div style={{ background: 0}}>\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route exact path='/' element={<CreateStaking\n\t\t\t\t\t\t\t\tcreateStakingPoolHandler={this.createStakingPoolHandler}\n\t\t\t\t\t\t\t/>}/>\n\t\t\t\t\t\t\t<Route path='/staking-list' element={<Main\n\t\t\t\t\t\t\t\tethBalance={this.state.ethBalance}\n\t\t\t\t\t\t\t\tstakeTokenBalance={this.state.stakeTokenBalance}\n\t\t\t\t\t\t\t\tstaking={this.state.staking}\n\t\t\t\t\t\t\t\tstake={this.stake}\n\t\t\t\t\t\t\t\twithdraw={this.withdraw}\n\t\t\t\t\t\t\t\tclaim={this.claim}\n\t\t\t\t\t\t\t\treinvest={this.reinvest}\n\t\t\t\t\t\t\t\tapprove={this.approve}\n\t\t\t\t\t\t\t\tRewardTokenBalance={this.state.RewardTokenBalance}\n\t\t\t\t\t\t\t\tStakingContract={this.state.StakingContract}\n\t\t\t\t\t\t\t\tstakingcontractdata={this.state.stakingcontractdata}\n\t\t\t\t\t\t\t\tisStakeTokenApproved={this.state.isStakeTokenApproved}\n\t\t\t\t\t\t\t\tloading={this.state.loading}\n\n\n\t\t\t\t\t\t\t\tmyStake={this.state.myStake}\n\t\t\t\t\t\t\t\tallRewardDebt={this.state.allRewardDebt}\n\t\t\t\t\t\t\t\tallPaidReward={this.state.allPaidReward}\n\t\t\t\t\t\t\t\taccTokensPerShare={this.state.accTokensPerShare}\n\t\t\t\t\t\t\t\tpendingReward={this.state.pendingReward}\n\t\t\t\t\t\t\t\tweeklyEstimate={this.state.weeklyEstimate}\n\t\t\t\t\t\t\t\tallStakedAmount={this.state.allStakedAmount}\n\t\t\t\t\t\t\t\tstartTime={this.state.startTime}\n\t\t\t\t\t\t\t\tfinishTime={this.state.finishTime}\n\t\t\t\t\t\t\t\tlastRewardTime={this.state.lastRewardTime}\n\t\t\t\t\t\t\t/>}/>\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default App;\n","import {HashRouter as Router} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<Router>\n\t\t<App/>\n\t</Router>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}