{"version":3,"sources":["Staking.module.css","WithdrawPopup.js","StakePopup.js","Stake.js","Main.js","Navbar.js","CreateStaking.js","App.js","index.js"],"names":["module","exports","WithdrawPopup","props","handleClose","event","setState","show","state","withdrawAmount","Button","className","onClick","preventDefault","Modal","this","Header","style","display","justifyContent","alignItems","Body","id","marginTop","type","min","onChange","input","value","toString","ref","placeholder","Footer","variant","StakingContractData","withdraw","window","web3","utils","toWei","Component","StakePopup","stakeAmount","stake","Stake","button","isReinvestEnabled","stakingTokenData","tokenContractAddress","rewardTokenData","isTokenApproved","claim","disabled","reinvest","approve","name","allStakedAmount","symbol","stakeTokenBalance","myStake","pendingReward","weeklyEstimate","finishTime","Main","staking","StakeBgColor","WithdrawBgColor","StakingContractsObjList","map","i","NavbarLocal","Navbar","bg","Nav","Item","Brand","to","Link","loading","arialLabel","height","account","width","src","Identicon","alt","CreateStaking","emptyStaking","stakeAddress","poolAddress","startBlock","finishBlock","poolTokenSupply","hasWhitelisting","inputChangeHandler","createStaking","target","handleCreate","createStakingPool","classes","Staking","autoComplete","required","App","networkID","TokenObj","methods","stakingContractAddress","approveAmount","send","from","on","confirmationNumber","contract","alert","AmountStaked","StakingContractObj","stakeTokens","receipt","loadBlockchainData","AmountToBeWithdrawn","withdrawStake","a","reinvestTokens","stakingObject","convertedToWei","getTokenContractData","stakingCreationContract","hash","StakingCreationContractObj","events","StakingPoolCreated","returnValues","pool","storeInCache","stakingContracts","ethBalance","loadWeb3","eth","Contract","stakingCreationContractAbi","getAllContractsFromCache","cachedContracts","stakingContractList","reduce","contracts","cachedContract","includes","push","contractDataPromiseList","getStakingContractData","Promise","all","stakingContractAbi","getUserInfo","call","allRewardDebt","allPaidReward","accTokensPerShare","lastRewardTime","rewardPerSec","startTime","rewardToken","stakingToken","rewardTokenContractAddress","stakingTokenAmountContractAddress","fromWei","moment","unix","format","toBN","muln","TokenAbi","balanceOf","allowance","tokenBalance","length","ethereum","Web3","enable","getAccounts","accounts","getBalance","net","getId","currentProvider","contractAddress","caches","open","cacheStorage","cachedContractList","put","Response","JSON","stringify","match","cachedResponse","json","background","exact","path","element","RewardTokenBalance","StakingContract","stakingcontractdata","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f6b3a0e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Staking\":\"Staking_Staking__3czEW\",\"icon\":\"Staking_icon__39zsA\",\"inputDiv\":\"Staking_inputDiv__2q_QH\",\"input\":\"Staking_input__31aGZ\",\"totals\":\"Staking_totals__1UJ_M\",\"goMax\":\"Staking_goMax__107nw\",\"stakeButton\":\"Staking_stakeButton__NuLYl\",\"unstakeButton\":\"Staking_unstakeButton__3xbyO\",\"stakeIcon\":\"Staking_stakeIcon__22k59\"};","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.js';\nimport {Button, Modal} from \"react-bootstrap\";\n\n\n\nclass WithdrawPopup extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      withdrawAmount: '0',\n      show: false,\n    }\n  }\n\n  handleClose = (event) => {\n    this.setState({ show: false })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Button className=\"btn btn-lg center-block claimAndWithdrawBtn\" onClick={(event) => {\n          event.preventDefault()\n          this.setState({ show: true })\n        }}>\n          Withdraw\n        </Button>\n\n        <Modal show={this.state.show}>\n          <Modal.Header>\n            <h4 style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}>Withdrawal</h4>\n            <br/>\n            <span >Enter amount to complete your withdrawal</span>\n          </Modal.Header>\n          <Modal.Body>\n\n            <div>\n              <span id=\"emailHelp\" className=\"form-text text-muted\">\n                Amount\n              </span>\n              <div className=\"form-group\" style={{ marginTop: 0 }}>\n                <input type=\"number\" min='0' className=\"form-control\" aria-describedby=\"emailHelp\" onChange={(event) => {\n                  const withdrawAmount = this.input.value.toString()\n                  this.setState({ withdrawAmount: withdrawAmount })\n                }}\n                       ref={(input) => { this.input = input }} placeholder={this.state.withdrawAmount.toString()}\n                />\n\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" className=\"claimAndWithdrawBtn\" onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" className=\"claimAndWithdrawBtn\" onClick={(event) => {\n              event.preventDefault()\n\n              if (this.props.StakingContractData) {\n                this.props.withdraw(this.props.StakingContractData, window.web3.utils.toWei(this.state.withdrawAmount, 'Ether'));\n                this.handleClose(event);\n              }\n            }}>\n              Confirm\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default WithdrawPopup;\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.js';\nimport {Button, Modal} from \"react-bootstrap\";\n\nclass StakePopup extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      stakeAmount: '0',\n      show: false,\n    }\n  }\n\n  handleClose = (event) => {\n    this.setState({ show: false })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Button className=\"btn btn-warning btn-sm\" onClick={(event) => {\n          event.preventDefault()\n          this.setState({ show: true })\n        }}>\n          Stake\n        </Button>\n\n        <Modal show={this.state.show}>\n          <Modal.Header>\n            <h4 style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}>Stake</h4>\n            <br/>\n            <span >Enter amount to complete your staking</span>\n          </Modal.Header>\n          <Modal.Body>\n\n            <div>\n              <span id=\"emailHelp\" className=\"form-text text-muted\">\n                Amount\n              </span>\n              <div className=\"form-group\" style={{ marginTop: 0 }}>\n                <input type=\"number\" min='0' className=\"form-control\" aria-describedby=\"emailHelp\" onChange={(event) => {\n                  const stakeAmount = this.input.value.toString()\n                  this.setState({ stakeAmount: stakeAmount })\n                }}\n                       ref={(input) => { this.input = input }} placeholder={this.state.stakeAmount.toString()}\n                />\n\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" className=\"claimAndWithdrawBtn\" onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" className=\"claimAndWithdrawBtn\" onClick={(event) => {\n              event.preventDefault()\n              if (this.props.StakingContractData) {\n                this.props.stake(this.props.StakingContractData, window.web3.utils.toWei(this.state.stakeAmount, 'Ether'));\n                this.handleClose(event);\n              }\n            }}>\n              Confirm\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default StakePopup;\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Main.js';\nimport {Button} from \"react-bootstrap\";\nimport WithdrawPopup from \"./WithdrawPopup\";\nimport StakePopup from \"./StakePopup\";\n\n\nclass Stake extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstakeAmount: '0'\n\t\t}\n\t}\n\n\n\trender() {\n\n\t\tlet isReinvestEnabled = this.props.StakingContractData.stakingTokenData.tokenContractAddress ===\n\t\t\tthis.props.StakingContractData.rewardTokenData.tokenContractAddress;\n\n\t\tlet button;\n\t\tif (!this.props.StakingContractData.stakingTokenData.isTokenApproved) {\n\t\t\tbutton =\n\t\t\t\t<div>\n\t\t\t\t\t<Button type=\"submit\" className=\"stakenow-btn btn-lg\" onClick={(event) => {\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tif (this.props.StakingContractData) {\n\t\t\t\t\t\t\tthis.props.approve(this.props.StakingContractData)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}> Approve </Button>\n\t\t\t\t</div>\n\t\t} else {\n\t\t\tbutton = <div>\n\t\t\t\t<Button type=\"submit\" className=\"btn btn-lg center-block claimAndWithdrawBtn\" onClick={(event) => {\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\tif (this.props.StakingContractData) {\n\t\t\t\t\t\tthis.props.claim(this.props.StakingContractData)\n\t\t\t\t\t}\n\t\t\t\t}}> Claim </Button>\n\n\t\t\t\t<Button type=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"btn btn-lg center-block claimAndWithdrawBtn\"\n\t\t\t\t\t\t\t\tdisabled={!isReinvestEnabled}\n\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t\tif (this.props.StakingContractData) {\n\t\t\t\t\t\t\t\t\t\tthis.props.reinvest(this.props.StakingContractData)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}> Reinvest </Button>\n\n\t\t\t\t<WithdrawPopup\n\t\t\t\t\tStakingContractData={this.props.StakingContractData}\n\t\t\t\t\twithdraw={this.props.withdraw}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t}\n\n\t\treturn (\n\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<div className='tokenNameDiv'>\n\n\t\t\t\t\t<table className='table table-borderless table-sm'>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td><h3> {this.props.StakingContractData.stakingTokenData.name}</h3></td>\n\t\t\t\t\t\t\t<td className='token-heading-btn'>\n\t\t\t\t\t\t\t\t<StakePopup\n\t\t\t\t\t\t\t\t\tStakingContractData={this.props.StakingContractData}\n\t\t\t\t\t\t\t\t\tstake={this.props.stake}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\n\t\t\t\t<table className='table table-borderless table-sm'>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> Total Staked</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclassName='infoTableValue'> {this.props.StakingContractData.allStakedAmount} {this.props.StakingContractData.stakingTokenData.symbol} </td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> APR</td>\n\t\t\t\t\t\t{/*TODO: change to correct APR*/}\n\t\t\t\t\t\t<td className='infoTableValue'> 10%</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> My Wallet</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclassName='infoTableValue'> {this.props.StakingContractData.stakeTokenBalance} {this.props.StakingContractData.stakingTokenData.symbol} </td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> My Stake</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclassName='infoTableValue'> {this.props.StakingContractData.myStake} {this.props.StakingContractData.stakingTokenData.symbol} </td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> My Rewards</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclassName='infoTableValue'> {this.props.StakingContractData.pendingReward} {this.props.StakingContractData.rewardTokenData.symbol} </td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> Weekly Estimate</td>\n\t\t\t\t\t\t{/*TODO: change to correct Estimate*/}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclassName='infoTableValue'> {this.props.StakingContractData.weeklyEstimate} {this.props.StakingContractData.rewardTokenData.symbol} </td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className='token-declaration-text'> Pool End Date (UTC)</td>\n\t\t\t\t\t\t<td className='infoTableValue'> {this.props.StakingContractData.finishTime} </td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\n\t\t\t\t{button}\n\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default Stake;\n","import './App.css';\nimport Stake from './Stake.js';\nimport React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Main extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstaking: 'true',\n\t\t\tStakeBgColor: '',\n\t\t\tWithdrawBgColor: ''\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<section className='myCards'>\n\t\t\t{\n\t\t\t\tthis.props.StakingContractsObjList.map((StakingContractData, i) =>\n\t\t\t\t\t<div className='myCard border-dark rounded-lg shadow-lg p-3 mb-5 bg-white rounded ' key={i}>\n\t\t\t\t\t\t<Stake\n\t\t\t\t\t\t\tstake={this.props.stake}\n\t\t\t\t\t\t\twithdraw={this.props.withdraw}\n\t\t\t\t\t\t\tapprove={this.props.approve}\n\t\t\t\t\t\t\tclaim={this.props.claim}\n\t\t\t\t\t\t\treinvest={this.props.reinvest}\n\t\t\t\t\t\t\tStakingContractData={StakingContractData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default Main;\n","import React, {Component} from 'react'\nimport Identicon from 'identicon.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar} from \"react-bootstrap\";\nimport { ThreeDots} from \"react-loader-spinner\";\nimport {Link} from \"react-router-dom\";\n\nclass NavbarLocal extends Component {\n\n\trender() {\n\t\treturn (\n\n\t\t\t<Navbar bg=\"light\" variant=\"light\">\n\n\t\t\t\t<Nav className=\"container-fluid\">\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Navbar.Brand to=\"/\">Staking</Navbar.Brand>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Link className='nav-link-menu' to=\"/\">Create Staking</Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Link className='nav-link-menu' to=\"/staking-list\">Staking List</Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item className=\"ml-auto\">\n\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t{this.props.loading ? <ThreeDots arialLabel=\"loading-indicator\" height={30}/> : null}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item className=\"ml-auto\">\n\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t<small className='text-secondary'>\n\t\t\t\t\t\t\t\t<small id=\"account\"> {this.props.account} </small>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t{this.props.account\n\t\t\t\t\t\t\t\t? <img\n\t\t\t\t\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t\t\t\t\t\twidth='30'\n\t\t\t\t\t\t\t\t\theight='30'\n\t\t\t\t\t\t\t\t\tsrc={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t: <span></span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t);\n\t}\n}\n\nexport default NavbarLocal;\n","import './App.css';\nimport React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classes from \"./Staking.module.css\";\nimport {Button} from \"react-bootstrap\";\n\nclass CreateStaking extends Component {\n\n\temptyStaking = {\n\t\tstakeAddress: '',\n\t\tpoolAddress: '',\n\t\tstartBlock: '',\n\t\tfinishBlock: '',\n\t\tpoolTokenSupply: '',\n\t\thasWhitelisting: false,\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcreateStaking: this.emptyStaking\n\t\t}\n\t}\n\n\tinputChangeHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ createStaking: {\n\t\t\t...this.state.createStaking,\n\t\t\t[event.target.name]: event.target.value,\n\t\t\t}\n\t\t})\n\t};\n\n\thandleCreate = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.createStakingPool(this.state.createStaking);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=' card border border-dark rounded-lg shadow-lg p-3 mb-5 bg-white rounded create-stk-card-props'>\n\t\t\t\t<div className='card-header text-center'>\n\t\t\t\t\t<h3> Create Staking</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<div className={classes.Staking}>\n\t\t\t\t\t\t\tStaking Token<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"stakeAddress\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.stakeAddress}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tPool Token<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"poolAddress\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.poolAddress}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tStart Time Stamp<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"startBlock\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.startBlock}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tFinish Time Stamp<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"finishBlock\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.finishBlock}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t\tPool Token Supply<br/>\n\t\t\t\t\t\t\t<input className=\"form-control\" onChange={this.inputChangeHandler}\n\t\t\t\t\t\t\t\t\t\t autoComplete=\"off\" name=\"poolTokenSupply\" required=\"\"\n\t\t\t\t\t\t\t\t\t\t ref={(input) => { this.input = input }} placeholder={this.state.createStaking.poolTokenSupply}\n\t\t\t\t\t\t\t\t\t\t type=\"text\"/><br/>\n\n\t\t\t\t\t\t<Button variant=\"secondary\" className=\"claimAndWithdrawBtn\" onClick={this.handleCreate}>\n\t\t\t\t\t\t\tCreate Staking\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreateStaking;\n","import './App.css';\nimport Main from './Main.js'\nimport React, {Component} from 'react';\nimport Web3 from 'web3';\nimport stakingContractAbi from './abis/StakingContract.json';\nimport stakingCreationContractAbi from './abis/StakingCreationContract.json';\nimport NavbarLocal from './Navbar.js';\nimport CreateStaking from './CreateStaking.js';\nimport TokenAbi from './abis/Token.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\nimport {Routes, Route} from 'react-router-dom';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tStakingContractsObjList: [],\n\t\t\tstakingCreationContract: '0x5564f5c9f63b8c69d0d1d188306c96f1cd9e3ffd',\n\t\t\tStakingCreationContractObj: {},\n\t\t\tstakingContracts: [\n\t\t\t\t'0x5a7502c918b14ac13d8c721e596da1c42ac3f2ec', // TODO: so there is always one by default, should be removed later\n\t\t\t\t'0x4De60A8210b4347a3f974E06339759dBABEF68e8', // TODO: so there is always one by default, should be removed later\n\t\t\t],\n\t\t\tapproveAmount: '115792089237316195423570985008687907853269984665640564039457584007913129639935',\n\t\t\taccount: '',\n\t\t\tethBalance: '0',\n\t\t\tloading: true,\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.loadWeb3()\n\t\tawait this.loadBlockchainData()\n\t}\n\n\tasync loadBlockchainData() {\n\t\tconst web3 = window.web3\n\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID !== 97) {\n\t\t\twindow.alert('token to be staked not on this blockchain network, switch to BSC testnet')\n\t\t\tthis.setState({loading: false})\n\t\t\treturn;\n\t\t}\n\n\t\tconst StakingCreationContractObj = new web3.eth.Contract(stakingCreationContractAbi, this.state.stakingCreationContract)\n\t\tthis.setState({ StakingCreationContractObj })\n\n\t\tconst cachedContracts = await this.getAllContractsFromCache();\n\t\tconst stakingContractList = cachedContracts.reduce((contracts, cachedContract) => {\n\t\t\tif (!contracts.includes(cachedContract)) {\n\t\t\t\tcontracts.push(cachedContract)\n\t\t\t}\n\t\t\treturn contracts;\n\t\t}, this.state.stakingContracts);\n\t\tthis.setState({ stakingContracts: stakingContractList});\n\n\t\tlet contractDataPromiseList = [];\n\t\tfor (const stakingContractAddress of this.state.stakingContracts) {\n\t\t\tcontractDataPromiseList.push(this.getStakingContractData(stakingContractAddress));\n\t\t}\n\n\t\tthis.setState({ StakingContractsObjList: await Promise.all(contractDataPromiseList) })\n\t\tthis.setState({loading: false})\n\t}\n\n\tasync getStakingContractData(stakingContractAddress) {\n\t\tconst web3 = window.web3\n\t\tconst StakingContractObj = new web3.eth.Contract(stakingContractAbi, stakingContractAddress)\n\t\tlet [\n\t\t\tmyStake,\n\t\t\tallRewardDebt,\n\t\t\tallPaidReward,\n\t\t\taccTokensPerShare,\n\t\t\tpendingReward,\n\t\t\tlastRewardTime,\n\t\t\trewardPerSec,\n\t\t\tstartTime,\n\t\t\tfinishTime,\n\t\t\tallStakedAmount,\n\t\t\trewardTokenContractAddress,\n\t\t\tstakingTokenAmountContractAddress,\n\t\t] = await Promise.all([\n\t\t\tStakingContractObj.methods.getUserInfo(this.state.account).call(),\n\t\t\tStakingContractObj.methods.allRewardDebt().call(),\n\t\t\tStakingContractObj.methods.allPaidReward().call(),\n\t\t\tStakingContractObj.methods.accTokensPerShare().call(),\n\t\t\tStakingContractObj.methods.pendingReward(this.state.account).call(),\n\t\t\tStakingContractObj.methods.lastRewardTime().call(),\n\t\t\tStakingContractObj.methods.rewardPerSec().call(),\n\t\t\tStakingContractObj.methods.startTime().call(),\n\t\t\tStakingContractObj.methods.finishTime().call(),\n\t\t\tStakingContractObj.methods.allStakedAmount().call(),\n\t\t\tStakingContractObj.methods.rewardToken().call(),\n\t\t\tStakingContractObj.methods.stakingToken().call(),\n\t\t])\n\n\t\tmyStake = window.web3.utils.fromWei(myStake[0].toString(), 'Ether');\n\t\tallRewardDebt = window.web3.utils.fromWei(allRewardDebt.toString(), 'Ether');\n\t\tallPaidReward = window.web3.utils.fromWei(allPaidReward.toString(), 'Ether');\n\t\taccTokensPerShare = window.web3.utils.fromWei(accTokensPerShare.toString(), 'Ether');\n\t\tpendingReward = window.web3.utils.fromWei(pendingReward.toString(), 'Ether');\n\t\tallStakedAmount = allStakedAmount ? window.web3.utils.fromWei(allStakedAmount.toString(), 'Ether') : 0;\n\t\tstartTime = moment.unix(startTime).format(\"YYYY-MM-DD HH:mm\");\n\t\tfinishTime = moment.unix(finishTime).format(\"YYYY-MM-DD HH:mm\");\n\t\tlastRewardTime = moment.unix(lastRewardTime).format(\"YYYY-MM-DD HH:mm\");\n\t\tlet weeklyEstimate = window.web3.utils.fromWei(\n\t\t\twindow.web3.utils.toBN(rewardPerSec).muln(60 * 60 * 24 * 7),\n\t\t\t'Ether',\n\t\t)\n\n\t\tlet [\n\t\t\trewardTokenData,\n\t\t\tstakingTokenData,\n\t\t] = await Promise.all([\n\t\t\tthis.getTokenContractData(rewardTokenContractAddress, stakingContractAddress),\n\t\t\tthis.getTokenContractData(stakingTokenAmountContractAddress, stakingContractAddress),\n\t\t])\n\n\t\treturn {\n\t\t\tStakingContractObj,\n\t\t\tstakingContractAddress,\n\t\t\tstakingTokenData,\n\t\t\trewardTokenData,\n\t\t\tmyStake,\n\t\t\tallRewardDebt,\n\t\t\tallPaidReward,\n\t\t\taccTokensPerShare,\n\t\t\tpendingReward,\n\t\t\tweeklyEstimate,\n\t\t\tallStakedAmount,\n\t\t\tstartTime,\n\t\t\tfinishTime,\n\t\t\tlastRewardTime,\n\t\t}\n\t}\n\n\tasync getTokenContractData(tokenContractAddress, stakingContractAddress) {\n\n\t\tconst web3 = window.web3\n\t\tconst TokenObj = new web3.eth.Contract(TokenAbi, tokenContractAddress)\n\t\tlet [\n\t\t\tstakeTokenBalance,\n\t\t\tallowance,\n\t\t\tsymbol,\n\t\t\tname,\n\t\t] = await Promise.all([\n\t\t\tTokenObj.methods.balanceOf(this.state.account).call(),\n\t\t\tstakingContractAddress ? TokenObj.methods.allowance(this.state.account, stakingContractAddress).call() : null,\n\t\t\tTokenObj.methods.symbol().call(),\n\t\t\tTokenObj.methods.name().call(),\n\t\t])\n\n\t\treturn {\n\t\t\ttokenContractAddress,\n\t\t\tTokenObj,\n\t\t\ttokenBalance: window.web3.utils.fromWei(stakeTokenBalance.toString(), 'Ether'),\n\t\t\tisTokenApproved: allowance?.toString().length >= 50, // TODO: fix allowance check to more appropriate. This one used for demo.\n\t\t\tsymbol,\n\t\t\tname,\n\t\t};\n\t}\n\n\tasync loadWeb3() {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable()\n\t\t\tconst web3 = window.web3\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n\t\t\tthis.setState({account: accounts[0]})\n\n\t\t\tconst ethBalance = await web3.eth.getBalance(this.state.account)\n\t\t\tthis.setState({ethBalance: ethBalance})\n\n\t\t\tconst networkID = await web3.eth.net.getId()\n\n\t\t\tthis.setState({networkID: networkID})\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t\tconst web3 = window.web3\n\n\t\t\tconst accounts = await web3.eth.getAccounts()\n\t\t\tthis.setState({account: accounts[0]})\n\n\t\t\tconst ethBalance = await web3.eth.getBalance(this.state.account)\n\t\t\tthis.setState({ethBalance: ethBalance})\n\n\t\t\tconst networkID = await web3.eth.net.getId()\n\n\t\t\tthis.setState({networkID: networkID})\n\t\t} else {\n\t\t\twindow.alert('Non-Ethereum browser detected. Please install metamask chrome extension and refresh page')\n\t\t}\n\t}\n\n\tapprove = (StakingContractData) => {\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID === 97) {\n\t\t\tStakingContractData.stakingTokenData.TokenObj.methods\n\t\t\t\t// make it +/- max approve so its needed only once\n\t\t\t\t.approve(StakingContractData.stakingContractAddress, this.state.approveAmount)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('confirmation', (confirmationNumber) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tStakingContractsObjList: this.state.StakingContractsObjList.map(contract => {\n\t\t\t\t\t\t\tif (contract.stakingContractAddress === StakingContractData.stakingContractAddress) {\n\t\t\t\t\t\t\t\tcontract.stakingTokenData.isTokenApproved = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn contract;\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t} else {\n\t\t\twindow.alert('approve: staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\tstake = (StakingContractData, AmountStaked) => {\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID === 97) {\n\t\t\tif (StakingContractData.stakingTokenData.isTokenApproved) {\n\t\t\t\tStakingContractData.StakingContractObj.methods\n\t\t\t\t\t.stakeTokens(AmountStaked)\n\t\t\t\t\t.send({from: this.state.account})\n\t\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\twindow.alert('staking contract has no enough access to the owners token')\n\t\t\t}\n\n\t\t} else {\n\t\t\twindow.alert('stake: staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\twithdraw = (StakingContractData, AmountToBeWithdrawn) => {\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID === 97) {\n\t\t\tStakingContractData.StakingContractObj.methods\n\t\t\t\t.withdrawStake(AmountToBeWithdrawn)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t} else {\n\t\t\twindow.alert('withdraw: staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\tclaim = (StakingContractData) => {\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID === 97) {\n\t\t\tStakingContractData.StakingContractObj.methods\n\t\t\t\t.withdrawStake(0)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t} else {\n\t\t\twindow.alert('claim: staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\treinvest = async (StakingContractData) => {\n\n\t\tif (StakingContractData.stakingTokenData.tokenContractAddress !== StakingContractData.rewardTokenData.tokenContractAddress) {\n\t\t\twindow.alert('Reinvest disabled, because staking and pool tokens does not match')\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID === 97) {\n\t\t\tStakingContractData.StakingContractObj.methods\n\t\t\t\t.reinvestTokens()\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t})\n\t\t} else {\n\t\t\twindow.alert('reinvest: staking contract not live on this blockchain')\n\t\t}\n\t}\n\n\tcreateStakingPool = async (stakingObject) => {\n\n\t\tthis.setState({loading: true})\n\t\tif (this.state.networkID === 97) {\n\n\t\t\tlet convertedToWei = window.web3.utils.toWei(stakingObject.poolTokenSupply, 'Ether');\n\t\t\tlet rewardTokenData = await this.getTokenContractData(stakingObject.poolAddress);\n\n\t\t\trewardTokenData.TokenObj.methods\n\t\t\t\t.approve(this.state.stakingCreationContract, this.state.approveAmount)\n\t\t\t\t.send({from: this.state.account})\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\t// create staking\n\t\t\t\t\tthis.state.StakingCreationContractObj.methods.createStakingPool(\n\t\t\t\t\t\tstakingObject.stakeAddress,\n\t\t\t\t\t\tstakingObject.poolAddress,\n\t\t\t\t\t\tstakingObject.startBlock,\n\t\t\t\t\t\tstakingObject.finishBlock,\n\t\t\t\t\t\tconvertedToWei,\n\t\t\t\t\t\tstakingObject.hasWhitelisting,\n\t\t\t\t\t)\n\t\t\t\t\t.send({from: this.state.account})\n\t\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t\t\tif (receipt?.events?.StakingPoolCreated?.returnValues?.pool) {\n\t\t\t\t\t\t\tthis.storeInCache(receipt.events.StakingPoolCreated.returnValues.pool)\n\t\t\t\t\t\t\tthis.loadBlockchainData()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on('confirmation', (confirmationNumber, receipt) => {\n\t\t\t\t\tthis.setState({loading: false})\n\t\t\t\t});\n\n\t\t} else {\n\t\t\twindow.alert('create: staking contract not live on this blockchain')\n\t\t}\n\t};\n\n\t// TODO: its a temporary solution, because contracts are not stored in BE or Main Contract for now\n\tasync storeInCache(contractAddress) {\n\t\tif ('caches' in window) {\n\t\t\tconst cacheStorage = await caches.open('contracts');\n\t\t\tconst cachedContractList = await this.getAllContractsFromCache();\n\t\t\tif (!cachedContractList.includes(contractAddress)) {\n\t\t\t\tcachedContractList.push(contractAddress)\n\t\t\t\tawait cacheStorage.put('/', new Response(JSON.stringify(cachedContractList)));\n\t\t\t}\n\t\t}\n\t}\n\t// TODO: its a temporary solution, because contracts are not stored in BE or Main Contract for now\n\tasync getAllContractsFromCache() {\n\t\t// Opening that particular cache\n\t\tconst cacheStorage = await caches.open('contracts');\n\n\t\t// Fetching that particular cache data\n\t\tconst cachedResponse = await cacheStorage.match('/');\n\t\treturn cachedResponse?.json() || [];\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='secondDiv'>\n\t\t\t\t<div className=\"App secondDiv\">\n\t\t\t\t\t<NavbarLocal account={this.state.account} loading={this.state.loading}/>\n\t\t\t\t\t<div style={{ background: 0}}>\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route exact path='/' element={<CreateStaking\n\t\t\t\t\t\t\t\tcreateStakingPool={this.createStakingPool}\n\t\t\t\t\t\t\t/>}/>\n\t\t\t\t\t\t\t<Route path='/staking-list' element={<Main\n\t\t\t\t\t\t\t\tstakeTokenBalance={this.state.stakeTokenBalance}\n\t\t\t\t\t\t\t\tstake={this.stake}\n\t\t\t\t\t\t\t\twithdraw={this.withdraw}\n\t\t\t\t\t\t\t\tclaim={this.claim}\n\t\t\t\t\t\t\t\treinvest={this.reinvest}\n\t\t\t\t\t\t\t\tapprove={this.approve}\n\t\t\t\t\t\t\t\tRewardTokenBalance={this.state.RewardTokenBalance}\n\t\t\t\t\t\t\t\tStakingContract={this.state.StakingContract}\n\t\t\t\t\t\t\t\tstakingcontractdata={this.state.stakingcontractdata}\n\t\t\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\t\t\tStakingContractsObjList={this.state.StakingContractsObjList}\n\t\t\t\t\t\t\t/>}/>\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default App;\n","import {HashRouter as Router} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<Router basename='/'>\n\t\t<App/>\n\t</Router>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}